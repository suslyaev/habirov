"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—á–µ—Ç–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
"""
from django.db.models import Q
from django.utils.html import format_html
from django.utils.safestring import mark_safe
from .models import Transaction


def get_transactions_for_estimate_item(estimate_item):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø—É–Ω–∫—Ç–∞ —Å–º–µ—Ç—ã
    """
    if not estimate_item or not estimate_item.pk:
        return Transaction.objects.none()
    
    return Transaction.objects.filter(
        estimate_item=estimate_item
    ).order_by('-date')


def get_transactions_for_estimate(estimate):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Å–º–µ—Ç—ã (–≤–∫–ª—é—á–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø—É–Ω–∫—Ç–æ–≤ —Å–º–µ—Ç—ã)
    """
    if not estimate or not estimate.pk:
        return Transaction.objects.none()
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ —Å–º–µ—Ç–µ –Ω–∞–ø—Ä—è–º—É—é
    estimate_transactions = Transaction.objects.filter(estimate=estimate)
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ –ø—É–Ω–∫—Ç–∞–º —Å–º–µ—Ç—ã
    item_transactions = Transaction.objects.filter(estimate_item__estimate=estimate)
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º
    return (estimate_transactions | item_transactions).distinct().order_by('-date')


def get_transactions_for_stage(stage):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–∞–ø–∞ (–≤–∫–ª—é—á–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–º–µ—Ç –∏ –ø—É–Ω–∫—Ç–æ–≤ —Å–º–µ—Ç—ã)
    """
    if not stage or not stage.pk:
        return Transaction.objects.none()
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ —ç—Ç–∞–ø—É –Ω–∞–ø—Ä—è–º—É—é
    stage_transactions = Transaction.objects.filter(stage=stage)
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–º–µ—Ç—ã
    estimate_transactions = Transaction.objects.filter(
        estimate__stage=stage
    )
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø—É–Ω–∫—Ç—ã —Å–º–µ—Ç
    item_transactions = Transaction.objects.filter(
        estimate_item__estimate__stage=stage
    )
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º
    return (stage_transactions | estimate_transactions | item_transactions).distinct().order_by('-date')


def get_transactions_for_object(object_obj):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ (–≤–∫–ª—é—á–∞—è –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç—Ç–∞–ø—ã, —Å–º–µ—Ç—ã –∏ –ø—É–Ω–∫—Ç—ã —Å–º–µ—Ç—ã)
    """
    if not object_obj or not object_obj.pk:
        return Transaction.objects.none()
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ —ç—Ç–∞–ø—ã
    stage_transactions = Transaction.objects.filter(
        stage__object=object_obj
    )
    
    estimate_transactions = Transaction.objects.filter(
        estimate__stage__object=object_obj
    )
    
    item_transactions = Transaction.objects.filter(
        estimate_item__estimate__stage__object=object_obj
    )
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º
    return (stage_transactions | estimate_transactions | item_transactions).distinct().order_by('-date')


def get_transactions_for_project(project):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (–≤–∫–ª—é—á–∞—è –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã, —ç—Ç–∞–ø—ã, —Å–º–µ—Ç—ã –∏ –ø—É–Ω–∫—Ç—ã —Å–º–µ—Ç—ã)
    """
    if not project or not project.pk:
        return Transaction.objects.none()
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
    stage_transactions = Transaction.objects.filter(
        stage__object__project=project
    )
    
    estimate_transactions = Transaction.objects.filter(
        estimate__stage__object__project=project
    )
    
    item_transactions = Transaction.objects.filter(
        estimate_item__estimate__stage__object__project=project
    )
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º
    return (stage_transactions | estimate_transactions | item_transactions).distinct().order_by('-date')


def render_transactions_table(transactions, title="–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", show_links=True, page_size=10, page=1):
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç HTML-—Ç–∞–±–ª–∏—Ü—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Å—Ç–∏–ª–µ Django Admin —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    
    Args:
        transactions: QuerySet —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        show_links: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        page_size: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        page: –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞—á–∏–Ω–∞—è —Å 1)
    """
    if not transactions.exists():
        return format_html('<p style="color: #666; font-style: italic;">–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</p>')
    
    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    total_count = transactions.count()
    start_index = (page - 1) * page_size
    end_index = start_index + page_size
    paginated_transactions = transactions[start_index:end_index]
    total_pages = (total_count + page_size - 1) // page_size
    
    html = f'<h3 style="margin-top: 20px; margin-bottom: 10px; color: #333;">{title}</h3>'
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    html += f'<p style="color: #666; font-size: 14px; margin-bottom: 10px;">'
    html += f'–ü–æ–∫–∞–∑–∞–Ω–æ {start_index + 1}-{min(end_index, total_count)} –∏–∑ {total_count} –∑–∞–ø–∏—Å–µ–π'
    html += '</p>'
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    if show_links:
        html += '<div style="margin-bottom: 10px;">'
        html += '<a href="/admin/control/transaction/add/" style="background-color: #007cba; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px;">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é</a>'
        html += '</div>'
    
    html += '<div style="overflow-x: auto;">'
    html += '<table style="width: 100%; border-collapse: collapse; border: 1px solid var(--border-color, #ddd);">'
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    html += '<thead>'
    html += '<tr style="border-bottom: 2px solid var(--border-color, #dee2e6);">'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–î–∞—Ç–∞</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–¢–∏–ø</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: right; font-weight: 600;">–°—É–º–º–∞</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–û–ø–∏—Å–∞–Ω–∏–µ</th>'
    html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: left; font-weight: 600;">–ü—Ä–∏–≤—è–∑–∫–∞</th>'
    if show_links:
        html += '<th style="border: 1px solid var(--border-color, #ddd); padding: 12px 8px; text-align: center; font-weight: 600;">–î–µ–π—Å—Ç–≤–∏—è</th>'
    html += '</tr>'
    html += '</thead>'
    
    # –¢–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    html += '<tbody>'
    
    total_income = 0
    total_expense = 0
    
    for i, transaction in enumerate(paginated_transactions):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Å—É–º–º—ã
        signed_amount = transaction.get_signed_amount()
        amount_color = '#28a745' if signed_amount > 0 else '#dc3545' if signed_amount < 0 else '#6c757d'
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–µ —Å—É–º–º—ã
        if signed_amount > 0:
            total_income += signed_amount
        else:
            total_expense += abs(signed_amount)
        
        html += '<tr>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">{transaction.date}</td>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">{transaction.get_transaction_type_display()}</td>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">{transaction.category.name}</td>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">{transaction.contractor.name if transaction.contractor else "-"}</td>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px; text-align: right; color: {amount_color}; font-weight: 500;">{signed_amount:,.2f} —Ä—É–±.</td>'
        html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">{transaction.description}</td>'
        
        # –ü—Ä–∏–≤—è–∑–∫–∞
        if transaction.estimate_item:
            html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">–ü—É–Ω–∫—Ç: {transaction.estimate_item.get_item_name()}</td>'
        elif transaction.estimate:
            html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">–°–º–µ—Ç–∞: {transaction.estimate}</td>'
        elif transaction.stage:
            html += f'<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">–≠—Ç–∞–ø: {transaction.stage.name}</td>'
        else:
            html += '<td style="border: 1px solid var(--border-color, #ddd); padding: 8px;">–ü—Ä—è–º–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è</td>'
        
        # –°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä
        if show_links:
            html += '<td style="border: 1px solid var(--border-color, #ddd); padding: 8px; text-align: center;">'
            html += f'<a href="/admin/control/transaction/{transaction.pk}/change/" style="color: #007cba; text-decoration: none; margin-right: 5px;" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</a>'
            html += f'<a href="/admin/control/transaction/{transaction.pk}/" style="color: #28a745; text-decoration: none;" title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å">üëÅÔ∏è</a>'
            html += '</td>'
        
        html += '</tr>'
    
    html += '</tbody>'
    html += '</table>'
    html += '</div>'
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    if total_pages > 1:
        html += '<div style="margin-top: 15px; text-align: center;">'
        html += '<div style="display: inline-block;">'
        
        # –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        if page > 1:
            html += f'<a href="?page={page-1}" style="padding: 8px 12px; margin: 0 2px; background-color: #007cba; color: white; text-decoration: none; border-radius: 4px;">‚Äπ –ü—Ä–µ–¥—ã–¥—É—â–∞—è</a>'
        
        # –ù–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
        start_page = max(1, page - 2)
        end_page = min(total_pages, page + 2)
        
        for p in range(start_page, end_page + 1):
            if p == page:
                html += f'<span style="padding: 8px 12px; margin: 0 2px; background-color: #6c757d; color: white; border-radius: 4px;">{p}</span>'
            else:
                html += f'<a href="?page={p}" style="padding: 8px 12px; margin: 0 2px; background-color: #f8f9fa; color: #007cba; text-decoration: none; border-radius: 4px;">{p}</a>'
        
        # –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        if page < total_pages:
            html += f'<a href="?page={page+1}" style="padding: 8px 12px; margin: 0 2px; background-color: #007cba; color: white; text-decoration: none; border-radius: 4px;">–°–ª–µ–¥—É—é—â–∞—è ‚Ä∫</a>'
        
        html += '</div>'
        html += '</div>'
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    if paginated_transactions.exists():
        html += '<div style="margin-top: 15px; padding: 10px; border-radius: 4px; border: 1px solid var(--border-color, #dee2e6);">'
        html += '<strong>–ò—Ç–æ–≥–æ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</strong> '
        html += f'<span style="color: #28a745;">–î–æ—Ö–æ–¥—ã: {total_income:,.2f} —Ä—É–±.</span> | '
        html += f'<span style="color: #dc3545;">–†–∞—Å—Ö–æ–¥—ã: {total_expense:,.2f} —Ä—É–±.</span> | '
        html += f'<span style="color: #007cba; font-weight: bold;">–ë–∞–ª–∞–Ω—Å: {total_income - total_expense:,.2f} —Ä—É–±.</span>'
        html += '</div>'
    
    return format_html(html)


def get_transactions_summary(transactions):
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
    """
    if not transactions.exists():
        return {
            'total_income': 0,
            'total_expense': 0,
            'balance': 0,
            'count': 0
        }
    
    total_income = 0
    total_expense = 0
    
    for transaction in transactions:
        signed_amount = transaction.get_signed_amount()
        if signed_amount > 0:
            total_income += signed_amount
        else:
            total_expense += abs(signed_amount)
    
    return {
        'total_income': total_income,
        'total_expense': total_expense,
        'balance': total_income - total_expense,
        'count': transactions.count()
    }
